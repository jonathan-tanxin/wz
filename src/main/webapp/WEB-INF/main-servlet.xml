<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" 
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:p="http://www.springframework.org/schema/p" 
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:mvc="http://www.springframework.org/schema/mvc"
    xmlns:aop="http://www.springframework.org/schema/aop" 
    xsi:schemaLocation="
        http://www.springframework.org/schema/beans 
        http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
        http://www.springframework.org/schema/aop        
        http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
        http://www.springframework.org/schema/context 
        http://www.springframework.org/schema/context/spring-context-3.0.xsd">
	
	<!-- 参数配置信息,扫描classpath目录下所有的.properties文件 -->
	<context:property-placeholder location="classpath*:config.properties"/>
	
    <!-- <bean class="org.springframework.web.servlet.handler.SimpleUrlHandlerMapping">
        <property name="mappings">
            <props>
                <prop key="/file/download/*">downloadController</prop>
            </props>
        </property>
    </bean> -->
    
	<!-- turn annotation on -->
	<mvc:annotation-driven/>
	<!-- tell spring which packages should scan -->
    <context:component-scan base-package="com.daxia.*.web">
    	<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Service" />
		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Repository" />
    </context:component-scan>
    
    <aop:aspectj-autoproxy proxy-target-class="true"/> 
    
    <!-- 会自动注册了validator  ConversionService  -->
    <mvc:annotation-driven validator="validator" conversion-service="conversion-service"/>
	
	<!-- 文件上传解析器 -->
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="maxUploadSize">
			<value>1200485769</value>
		</property>
		<property name="defaultEncoding">
			<value>utf-8</value>
		</property>
	</bean>  
    
    <!-- 以下 validator  ConversionService 在使用 mvc:annotation-driven 会 自动注册-->
    <bean id="validator" class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean">
        <property name="providerClass"  value="org.hibernate.validator.HibernateValidator"/>
        <!-- 如果不加默认到 使用classpath下的 ValidationMessages.properties -->
        <property name="validationMessageSource" ref="messageSource"/>
    </bean>
    <bean id="conversion-service" class="org.springframework.format.support.FormattingConversionServiceFactoryBean" />
    
    <!-- tell servlet /res/** are resources request, like js, css, and just return resources back -->
    <mvc:resources mapping="/res/**" location="/res/, /data/, /demo/, /js/, /doc/, /css/, /img/" cache-period="3600"/>

	<!-- if url is not mapped, visit directly -->    
    <mvc:default-servlet-handler/>
    
	<bean id="viewResolver"
    	class="org.springframework.web.servlet.view.UrlBasedViewResolver">
	    <property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/>
	    <property name="prefix" value="/WEB-INF/jsp/"/>
	    <property name="suffix" value=".jsp"/>
	</bean>
	
	<bean class="org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping">
		<property name="interceptors">
		    <list>
		    	<!-- <ref bean="controllerInterceptor"/> -->
		    </list>
		</property> 
	</bean>
	
	<!-- 
		分别实现预处理、后处理（调用了Service并返回ModelAndView，但未进行页面渲染）、返回处理（已经渲染了页面） 
		在preHandle中，可以进行编码、安全控制等处理； 
		在postHandle中，有机会修改ModelAndView； 
		在afterCompletion中，可以根据ex是否为null判断是否发生了异常，进行日志记录。 
	 -->
	<mvc:interceptors>  
      <mvc:interceptor>  
        <mvc:mapping path="/admin/**/*" />  
        <bean id="controllerInterceptor" class="com.daxia.wz.aop.ControllerInterceptor"></bean>
      </mvc:interceptor>  
   </mvc:interceptors>  
</beans>